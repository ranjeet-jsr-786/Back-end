USE SHOPPING_CART;

-- CREATE TABLE
CREATE TABLE USER_ACCOUNT
(
  USER_NAME VARCHAR(45) NOT NULL,
  ACTIVE    BIT NOT NULL,
  ENCRYTED_PASSWORD  VARCHAR(128) NOT NULL,
  USER_ROLE VARCHAR(20) NOT NULL,
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL
)  ENGINE= INNODB DEFAULT CHARSET = UTF8; 
ALTER TABLE USER_ACCOUNT
  ADD PRIMARY KEY (USER_NAME) ;  
 
 
 -- Product catalog 
 
CREATE TABLE PRODUCT_CATEGORY
(
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
  NAME        VARCHAR(50) NOT NULL,
  ACTIVE      BIT NOT NULL,
  DETAIL        VARCHAR(75),
  OTHER_INFO VARCHAR(128),  
  IMAGE       LONGBLOB,
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE PRODUCT_CATEGORY
  ADD UNIQUE INDEX IDX_UNIQUE_PRODUCT_CATEGORY_NAME(NAME);
 
  CREATE TABLE PRODUCT
(
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
  CATEGORY_ID INT UNSIGNED,
  CODE        VARCHAR(40) NOT NULL,
  NAME        VARCHAR(50) NOT NULL,
  ACTIVE      BIT NOT NULL,
  MRP_PRICE       DOUBLE PRECISION NOT NULL,
  PRICE_UNIT        VARCHAR(10),
  SIZE        VARCHAR(10),
  SIZE_UNIT        VARCHAR(10),
  COLOR       VARCHAR(15),  
  TYPE       VARCHAR(15),
  MANUFACTURER VARCHAR(75),
  MANUFACTURING_DATE DATE,
  EXPIRY_DATE DATE,
  HSN_CODE VARCHAR(15),
  DETAIL        VARCHAR(75), 
  BATCH_NUMBER VARCHAR(75),
  OTHER_INFO VARCHAR(128),  
  IMAGE       LONGBLOB,
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_PRODUCT_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES PRODUCT_CATEGORY(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
 
ALTER TABLE PRODUCT
  ADD UNIQUE INDEX IDX_UNIQUE_PRODUCT_CODE(CODE),
  ADD UNIQUE INDEX IDX_UNIQUE_PRODUCT_NAME(NAME);
  
 CREATE TABLE PRODUCT_PRICE
(
  ID             		INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRODUCT_ID 			VARCHAR(20) not null,
  UNIT    				VARCHAR(10),    
  BASE_PRICE      		double precision,
  BASE_PRICE_UNIT    	VARCHAR(10),
  SALE_PRICE     		double precision,
  SALE_PRICE_UNIT    	VARCHAR(10),
  PURCHASE_PRICE    	double precision,
  PURCHAGE_PRICE_UNIT   VARCHAR(10),
  DISCOUNT      		double precision,
  ACTIVE      			BIT NOT NULL,  
  STATUS       			VARCHAR(20), 
  OTHER_INFO   			VARCHAR(128),
  UPDATED_BY   			VARCHAR(45),
  UPDATE_DATE  			TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   			VARCHAR(45),
  CREATE_DATE  			TIMESTAMP NOT NULL,
  VERSION INT 			UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_PRODUCT_PRICE_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(CODE) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE PRODUCT_PRICE  
   ADD UNIQUE INDEX IDX_UNIQUE_PRODUCT_PRICE_ID_PRODUCT_ID(ID, PRODUCT_ID);

 CREATE TABLE STORE
(
  ID 		 INT UNSIGNED NOT NULL AUTO_INCREMENT,  
  STREET1    VARCHAR(255) not null,
  STREET2    VARCHAR(255),
  LANDMARK   VARCHAR(128),
  CITY       VARCHAR(100),
  STATE      VARCHAR(75),
  PIN        INTEGER not null,  
  ACTIVE      BIT NOT NULL,
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
 
ALTER TABLE STORE  
   ADD UNIQUE INDEX IDX_UNIQUE_STORE_PIN(LANDMARK);
   
     CREATE TABLE PRODUCT_STOCK
(
  ID 				INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRODUCT_ID 		INT UNSIGNED NOT NULL,
  STORE_ID 			INT UNSIGNED NOT NULL,
  QUANITY    		INTEGER not null,
  UNIT    			VARCHAR(10),
  DETAIL        	VARCHAR(75),
  OTHER_INFO 		VARCHAR(128),    
  UPDATED_BY 		VARCHAR(45),
  UPDATE_DATE 		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY 		VARCHAR(45),
  CREATE_DATE 		TIMESTAMP NOT NULL,
  VERSION INT 		UNSIGNED NULL,
  PRIMARY KEY 		(ID),
  CONSTRAINT fk_PRODUCT_STOCK_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT fk_PRODUCT_STOCK_STORE_ID FOREIGN KEY (STORE_ID) REFERENCES STORE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE PRODUCT_STOCK
  ADD UNIQUE INDEX IDX_UNIQUE_PRODUCT_STOCK_PRODUCT_ID_STORE_ID(PRODUCT_ID, STORE_ID);
  
  CREATE TABLE TRANSFER_PRODUCT_STOCK
(
  ID 				INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRODUCT_ID 		INT UNSIGNED NOT NULL,
  FROM_STORE_ID 	INT UNSIGNED NOT NULL,
  TO_STORE_ID 		INT UNSIGNED NOT NULL,
  QUANITY    		DOUBLE not null,
  UNIT    			VARCHAR(10),
  TRANSFER 			DATETIME,
  STATUS 			VARCHAR(20),
  DETAIL        	VARCHAR(75),
  OTHER_INFO 		VARCHAR(128),    
  UPDATED_BY 		VARCHAR(45),
  UPDATE_DATE 		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY 		VARCHAR(45),
  CREATE_DATE 		TIMESTAMP NOT NULL,
  VERSION INT 		UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_TRANSFER_PRODUCT_STOCK_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT fk_TRANSFER_PRODUCT_STOCK_FROM_STORE_ID FOREIGN KEY (FROM_STORE_ID) REFERENCES STORE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT fk_TRANSFER_PRODUCT_STOCK_TO_STORE_ID FOREIGN KEY (TO_STORE_ID) REFERENCES STORE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE TRANSFER_PRODUCT_STOCK
  ADD UNIQUE INDEX IDX_UNIQUE_TRANSFER_PRODUCT_STOCK_PRODUCT_ID_TO_STORE_ID(PRODUCT_ID, TO_STORE_ID);

  

  CREATE TABLE STOCK_DELIVERED
(
  ID 				INT UNSIGNED NOT NULL AUTO_INCREMENT,
  STOCK_ID 			INT UNSIGNED NOT NULL,
  REFRENCE_ID 		INT UNSIGNED NOT NULL,
  REFRENCE_TYPE  	ENUM('ON_DELIVERY','CANCELLED','RETURNED','PURCHASE','SALE', 'MAINTENANCE', 'OTHERS', 'MISCELLANEOUS', 'TRANSFER'),
  PRODUCT_ID 		INT UNSIGNED, 
  QUANITY    		DOUBLE not null,
  UNIT    			VARCHAR(10),
  DELIVERED_DATE 	DATETIME,
  DELIVERED_BY 		VARCHAR(50),
  DETAIL        	VARCHAR(75),
  OTHER_INFO 		VARCHAR(128),    
  UPDATED_BY 		VARCHAR(45),
  UPDATE_DATE 		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY 		VARCHAR(45),
  CREATE_DATE 		TIMESTAMP NOT NULL,
  VERSION INT 		UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_STOCK_DELIVERED_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT fk_STOCK_DELIVERED_STOCK_ID FOREIGN KEY (STOCK_ID) REFERENCES PRODUCT_STOCK(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE STOCK_DELIVERED
  ADD INDEX IDX_UNIQUE_STOCK_DELIVERED_REFRENCE_ID(REFRENCE_ID);
  
  CREATE TABLE STOCK_RECEIVED
(
  ID 				INT UNSIGNED NOT NULL AUTO_INCREMENT,
  STOCK_ID 			INT UNSIGNED NOT NULL,
  REFRENCE_ID 		INT UNSIGNED NOT NULL,
  REFRENCE_TYPE  	ENUM('ON_DELIVERY','CANCELLED','RETURNED','PURCHASE','SALE', 'MAINTENANCE', 'OTHERS', 'MISCELLANEOUS', 'TRANSFER'),
  PRODUCT_ID 		INT UNSIGNED,
  QUANITY   		INTEGER not null,
  UNIT    			VARCHAR(10),
  RECEIVED_DATE 	DATETIME,
  RECEIVED_BY 		VARCHAR(50),
  DETAIL        	VARCHAR(75),
  OTHER_INFO 		VARCHAR(128),    
  UPDATED_BY 		VARCHAR(45),
  UPDATE_DATE 		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY 		VARCHAR(45),
  CREATE_DATE 		TIMESTAMP NOT NULL,
  VERSION INT 		UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_STOCK_RECEIVED_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT fk_STOCK_RECEIVED_STOCK_ID FOREIGN KEY (STOCK_ID) REFERENCES PRODUCT_STOCK(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE STOCK_RECEIVED
  ADD INDEX IDX_UNIQUE_STOCK_RECEIVED_REFRENCE_ID(REFRENCE_ID);
  
  CREATE TABLE SUPPLIER
(
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT, 
  CONTACT_NAME    VARCHAR(100),
  FIRM_NAME    VARCHAR(50),
  LICENCE_NUMBER   VARCHAR(50),
  PRODUCT_CATEGORY   INT,
  EMAIL   VARCHAR(128),
  PHONE   VARCHAR(20),
  MOBILE   VARCHAR(15) not null,
  ALTERNATE_MOBILE   VARCHAR(15),
  DETAIL        VARCHAR(75),
  OTHER_INFO VARCHAR(128),    
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE SUPPLIER
  ADD UNIQUE INDEX IDX_UNIQUE_SUPPLIER_CONTACT_NAME_MOBILE(CONTACT_NAME, MOBILE),
  ADD UNIQUE INDEX IDX_UNIQUE_SUPPLIER_CONTACT_NAME(CONTACT_NAME);
  
  CREATE TABLE SUPPLY
(
  ID           INT UNSIGNED NOT NULL AUTO_INCREMENT,
  SUPPLIER_ID  INT UNSIGNED,
  PURCHASE_ORDER_ID   INT UNSIGNED not null,
  PRODUCT_ID VARCHAR(20) not null,
  AMOUNT     double precision not null,
  PRICE      double precision not null,
  QUANITY     DOUBLE not null,
  QUANITY_UNIT     (10),  
  STATUS       VARCHAR(20), 
  OTHER_INFO   VARCHAR(128),
  UPDATED_BY   VARCHAR(45),
  UPDATE_DATE  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   VARCHAR(45),
  CREATE_DATE  TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_SUPPLY_SUPPLIER_ID FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

 
 -- Customer System 
CREATE TABLE CUSTOMER
(
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT,  
  FIRST_NAME    VARCHAR(40) not null,
  LAST_NAME    VARCHAR(40),
  MIDDLE_NAME    VARCHAR(100),
  EMAIL   VARCHAR(128),
  PHONE   VARCHAR(20),
  MOBILE   VARCHAR(15) not null,
  ALTERNATE_MOBILE   VARCHAR(15),
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

-- Customer informtion 
ALTER TABLE CUSTOMER
  ADD UNIQUE INDEX IDX_UNIQUE_CUSTOMER_FIRST_NAME_MOBILE(FIRST_NAME, MOBILE),
  ADD UNIQUE INDEX IDX_UNIQUE_CUSTOMER_FIRST_NAME(FIRST_NAME);
  
  

  
  CREATE TABLE ADDRESS
(
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT,  
  STREET1    VARCHAR(255) not null,
  STREET2    VARCHAR(255),
  LANDMARK   VARCHAR(128),
  CITY       VARCHAR(100),
  STATE      VARCHAR(75),
  PIN        INTEGER not null,
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
 
ALTER TABLE ADDRESS  
   ADD UNIQUE INDEX IDX_UNIQUE_ADDRESS_PIN(LANDMARK);
 
 CREATE TABLE CUSTOMER_ADDRESS
(
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT,  
  CUSTOMER_ID    INT UNSIGNED not null,
  ADDRESS_ID    INT UNSIGNED not null,
  ADDRESS_TYPE   ENUM('RESIDENCE','OFFICE','SHIPPING', 'PERMANENT', 'TEMPORARY'),
  ACTIVE    BIT NOT NULL,
  UPDATED_BY VARCHAR(45),
  UPDATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(45),
  CREATE_DATE TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_CUSTOMER_ADDRESS_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT fk_CUSTOMER_ADDRESS_ADDRESS_ID FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
 
 ALTER TABLE CUSTOMER_ADDRESS
  ADD UNIQUE INDEX IDX_UNIQUE_CUSTOMER_ID_ADDRESS_ID(CUSTOMER_ID, ADDRESS_ID);
-- Order System 
CREATE TABLE ORDERS
(
  ORDER_NUM    VARCHAR(50) not null,
  CUSTOMER_ID  INT UNSIGNED not null,
  DETAIL       VARCHAR(128),
  AMOUNT       DOUBLE precision not null,
  ORDER_DATE   DATETIME not null,  
  TYPE         VARCHAR(15),
  STATUS       VARCHAR(20),  
  OTHER_INFO   VARCHAR(128),
  UPDATED_BY   VARCHAR(45),
  UPDATE_DATE  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   VARCHAR(45),
  CREATE_DATE  TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ORDER_NUM)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
   
   CREATE TABLE ORDERED_ITEMS
(
  ID           INT UNSIGNED NOT NULL AUTO_INCREMENT,
  ORDER_ID   VARCHAR(50) not null,
  PRODUCT_ID VARCHAR(20) not null,
  AMOUNT     double precision not null,
  PRICE      double precision not null,
  QUANITY    INTEGER not null,
  QUANITY_UNIT    VARCHAR(10),  
  STATUS       VARCHAR(20), 
  OTHER_INFO   VARCHAR(128),
  UPDATED_BY   VARCHAR(45),
  UPDATE_DATE  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   VARCHAR(45),
  CREATE_DATE  TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_ORDERED_ITEMS_ORDER_ID FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_NUM) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE ORDERED_ITEMS  
   ADD UNIQUE INDEX IDX_UNIQUE_ORDERED_ITEMS_ID_ORDER_ID_PRODUCT_ID(ID, ORDER_ID, PRODUCT_ID);
   
 CREATE TABLE PAYMENT
(
  ID             INT UNSIGNED NOT NULL AUTO_INCREMENT,
  REFRENCE_ID    VARCHAR(50) not null,
  REFRENCE_TYPE  ENUM('ON_DELIVERY','CANCELLED','RETURNED','PURCHASE','SALE', 'MAINTENANCE', 'OTHERS', 'MISCELLANEOUS'),
  PAYMENT_MODE   ENUM('CASH', 'CHEQUE', 'DEBIT_CARD','CREDIT_CARD', 'NET_BANKING', 'OTHERS'),
  AMOUNT_PAID    double precision not null,
  TRANSACTION_ID VARCHAR(50),
  DETAIL         VARCHAR(75),
  STATUS         ENUM('PENDING','PAID','ADVANCE_PAID', 'PARTIAL_PAID'), 
  OTHER_INFO     VARCHAR(128),
  UPDATED_BY     VARCHAR(45),
  UPDATE_DATE    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY     VARCHAR(45),
  CREATE_DATE    TIMESTAMP NOT NULL,
  VERSION INT    UNSIGNED NULL,
  PRIMARY KEY (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE PAYMENT 
   ADD UNIQUE INDEX IDX_UNIQUE_PAYMENT_REFRENCE_ID(ID, REFRENCE_ID);
    
	CREATE TABLE RETURNS
(
  ID           INT UNSIGNED NOT NULL AUTO_INCREMENT,
  ORDERED_PRODUCT_ID INT UNSIGNED,
  AMOUNT     double precision not null,
  QUANITY    double precision not null,
  QUANITY_UNIT    VARCHAR(10),
  STATUS       VARCHAR(20), 
  OTHER_INFO   VARCHAR(128),
  UPDATED_BY   VARCHAR(45),
  UPDATE_DATE  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   VARCHAR(45),
  CREATE_DATE  TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_RETURNS_ORDERED_PRODUCT_ID FOREIGN KEY (ORDERED_PRODUCT_ID) REFERENCES ORDERED_ITEMS(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
 
ALTER TABLE RETURNS  
   ADD UNIQUE INDEX IDX_UNIQUE_RETURNS_ORDERED_PRODUCT_ID(ORDERED_PRODUCT_ID);
   
   CREATE TABLE ORDERED_CANCEL
(
  ID           INT UNSIGNED NOT NULL AUTO_INCREMENT,
  ORDERED_ITEMS_ID INT UNSIGNED,
  AMOUNT     double precision not null,
  QUANITY    double precision not null,
  QUANITY_UNIT    VARCHAR(10),
  STATUS       VARCHAR(20), 
  OTHER_INFO   VARCHAR(128),
  UPDATED_BY   VARCHAR(45),
  UPDATE_DATE  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   VARCHAR(45),
  CREATE_DATE  TIMESTAMP NOT NULL,
  VERSION INT UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_ORDERED_ITEM_CANCEL_ORDERED_ITEMS FOREIGN KEY (ORDERED_ITEMS_ID) REFERENCES ORDERED_ITEMS(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
 
ALTER TABLE ORDERED_CANCEL  
   ADD UNIQUE INDEX IDX_UNIQUE_ORDERED_ITEM_CANCEL_ORDERED_ITEMS_ID(ORDERED_ITEMS_ID);
   


CREATE TABLE INVOICE
(
  ID           		INT UNSIGNED NOT NULL AUTO_INCREMENT,
  CUSTOMER_ID  		INT UNSIGNED not null,
  ORDER_ID     		VARCHAR(50) not null,
  DETAIL       		VARCHAR(128),
  REVERSE_CHARGE    BIT,
  TRANSPORT_MODE    VARCHAR(50),
  VEHICAL_NUMBER    VARCHAR(10),
  DATE_OF_SUPPLY    TIMESTAMP,
  PLACE_OF_SUPPLY   VARCHAR(50),
  TOTAL_BASE_PRICE      	double precision,
  TOTAL_TAX1      		double precision,
  TOTAL_TAX2      		double precision,
  TOTAL_TAX3      		double precision,
  TOTAL_AMOUNT     		double precision,
  TOTAL_DISCOUNT      	double precision, 
  TOTAL_NET_AMOUNT      double precision,
  GROSS_AMOUNT      double precision, 
  INVOICE_DATE 		DATETIME not null,
  IMAGE_FILE       	LONGBLOB,  
  TYPE         		VARCHAR(15),
  STATUS       		VARCHAR(20),  
  OTHER_INFO   		VARCHAR(128),
  UPDATED_BY   		VARCHAR(45),
  UPDATE_DATE  		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   		VARCHAR(45),
  CREATE_DATE  		TIMESTAMP NOT NULL,
  VERSION INT  		UNSIGNED NULL,
  PRIMARY KEY  (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;
   
   CREATE TABLE INVOICE_DETAILS
(
  ID             	INT UNSIGNED NOT NULL AUTO_INCREMENT,
  INVOICE_ID   		INT UNSIGNED not null,
  PRODUCT_ID 		VARCHAR(20) not null,
  PRODUCT_NAME      VARCHAR(50) NOT NULL,  
  QUANITY    		INTEGER not null,
  QUANITY_UNIT    	VARCHAR(10),    
  BASE_PRICE      	double precision,
  TAX1      		double precision,
  TAX2      		double precision,
  TAX3      		double precision,
  AMOUNT     		double precision,
  DISCOUNT      	double precision, 
  NET_AMOUNT      	double precision,
  TOTAL_AMOUNT      double precision,  
  STATUS       		VARCHAR(20), 
  OTHER_INFO   		VARCHAR(128),
  UPDATED_BY   		VARCHAR(45),
  UPDATE_DATE  		TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY   		VARCHAR(45),
  CREATE_DATE  		TIMESTAMP NOT NULL,
  VERSION INT 		UNSIGNED NULL,
  PRIMARY KEY (ID),
  CONSTRAINT fk_INVOICE_DETAILS_INVOICE_ID FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

ALTER TABLE INVOICE_DETAILS  
   ADD UNIQUE INDEX IDX_UNIQUE_INVOICE_DETAILS_ID_INVOICE_ID_PRODUCT_ID(ID, INVOICE_ID, PRODUCT_ID);
   
   CREATE TABLE CONFIGURATION
(
  ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
  KEY_NAME        	VARCHAR(50) NOT NULL,
  VALUE				 VARCHAR(50),
  ACTIVE      		BIT NOT NULL,
  DETAIL        	VARCHAR(75),
  OTHER_INFO 		VARCHAR(128),  
  IMAGE       		LONGBLOB,
  UPDATED_BY		 VARCHAR(45),
  UPDATE_DATE		 TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CREATED_BY 		VARCHAR(45),
  CREATE_DATE 		TIMESTAMP NOT NULL,
  VERSION 			INT UNSIGNED NULL,
  PRIMARY KEY (ID)
)  ENGINE= INNODB DEFAULT CHARSET = UTF8;

   

COMMIT;
